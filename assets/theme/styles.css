/* 
* @license
* ddd / module-connexion
* Copyright (c) 2022 Abraham Ukachi
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* @name: Theme
* @type: Styles 
* @author: Abraham Ukachi <abraham.ukachi@laplateforme.com>
*/

/* @import 'color.css'; */
/* @import 'typography.css'; */


/* ==== THEME STYLES ==== */


/**** custom properties for `classic`, `light` and `dark` themes ****/

/* Default Theme */
.theme {}

/* Classic Theme */
.theme.classic {}


/* Light Theme */
.theme.light {}

/* Dark Theme */
.theme.dark {}





/* ==== FLEX LAYOUT ==== */

/* Flex-Layout */
.flex-layout {
  display: flex;
}


/* Screens & Fixed Layouts */
.screen.flex-layout, .flex-layout[fixed] {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 20;
  background: inherit;
  color: inherit;
}

/* Vertical Flex-Layout */
.vertical.flex-layout {
  flex-direction: column;
}

/* Horizontal Flex-Layout */
.horizontal.flex-layout {
  flex-direction: row;
}

/* Centered Flex-Layout */
.centered.flex-layout {
  justify-content: center;
  align-items: center;
}

/* JustCenter Flex-Layout */
.center.flex-layout {
  align-items: center;
}

/* ==== END of FLEX LAYOUT ==== */



/* Full Bleed */
[fullbleed] {
  margin: 0;
  padding: 0;
}


/* Fit nicely into its container */
[fit] {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

[hidden] {
  display: none !important;
}

/* Flex SPAN */
span[flex] {
  display: flex;
  flex: 1;
}

/* Naked Buttons */
button[naked] {
  border: 0;
  background: none;
  list-style: none;
}

/* Naked Lists */
ul[naked], li[naked] {
  padding: 0;
  list-style: none;
}


/* Top Position  */
.top { top: 0; }
/* Right Position  */
.right { right: 0; }
/* Bottom Position  */
.bottom { bottom: 0; }
/* Left Position  */
.left { left: 0; }


/* 
 * --> Narrow - Device <--
 * Phone: ? (Responsive)
 * Dimension: ~460px (width)
 *
 * ***************************************
 * when the viewport is lesser than 460px,
 * layout changes to a narrow-layout.
 * ***************************************
 */

/* The Boss - html */
html {
  width: 100%;
  height: 100%;
}

/* Body */
body {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: var(--background-color);
  color: var(--on-background-color);
  fill: var(--on-background-color);
   
  /* Support for all Webkit browsers. */
  -webkit-font-smoothing: antialiased;
  -webkit-transition: background-color 200ms ease;

  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  transition: background-color 200ms ease;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  -moz-transition: background-color 200ms ease;
  
  /* Support for IE. */
  font-feature-settings: 'liga';
}

/* App Layout */
#appLayout {}

/* MAIN part of App Layout */
#appLayout > main {
  flex: 1;
  width: 100%;
  height: 100%;
}

/* ASIDE part of App Layout */
#appLayout > aside {
  display: none;
  position: relative;
  width: var(--aside-width, 50%);
  height: 100%;
}


/* App Logo of any ASIDE */
aside > .app-logo {
  --app-logo-color: var(--outline-color);
  opacity: var(--opacity-md-icon-disabled);
  --app-logo-size: 50%;
}


/* ------ */


/* App Header */
#appHeader {
  display: block;
  position: relative;
  width: 100%;
  height: auto;
}



/* Header Content */
#headerContent {}


/* ------ */


/* all App Bars in App Header */
#appHeader > .app-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
  padding: 0 var(--app-bar-padding, 16px);
}

/* Title Wrappers in App Header */
#appHeader .title-wrapper {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 8px;
    height: 100%;
    justify-content: center;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* App Bar */
#appBar {}

/* Nav Bar Styles & footer of Main */
.nav-bar, main > footer {
  position: relative;
  box-sizing: border-box;
}

/* Vertical Nav Bar */
.nav-bar.vertical {
  display: none;
  width: var(--nav-bar-size, 54px);
}

/* All horizontal dividers in vertical nav bar */
.nav-bar.vertical span.divider.horizontal {
  position: relative;
  width: 70%;
  margin: 0 auto;
}

/* Horizontal Nav Bar & Footer of Main */
.nav-bar.horizontal, main > footer {
  height: var(--nav-bar-size, 54px);
}


/* App Logo | SPAN */
span.app-logo {
  display: block;
  position: relative;
  width: var(--app-logo-size, 32px);
  height: var(--app-logo-size, 32px);
  max-width: var(--app-logo-size-max, 512px);
  max-height: var(--app-logo-size-max, 512px);
  background-color: var(--app-logo-color, var(--primary-color));


  -webkit-mask: url('../../assets/logos/logo.svg') no-repeat 50% 50%;
  -moz-mask: url('../../assets/logos/logo.svg') no-repeat 50% 50%;
  mask: url('../../assets/logos/logo.svg') no-repeat 50% 50%;

  -webkit-mask-size: cover;
  -moz-mask-size: cover;
  mask-size: cover;
}

/* Outlined App Logo | SPAN */
span[outlined].app-logo {
  -webkit-mask: url('../../assets/logos/logo-outline.svg') no-repeat 50% 50%;
  -moz-mask: url('../../assets/logos/logo-outline.svg') no-repeat 50% 50%;
  mask: url('../../assets/logos/logo-outline.svg') no-repeat 50% 50%;
}

/* --- Dividers --- 
 *
 * NOTE: To change the diviers position, 
 * you can apply either `.top`, `.right`, `.bottom` and/or `.left` classes
 */

/* Divider | SPAN */
span.divider {
  display: block;
  position: absolute;
  background: var(--divider-color, var(--outline-color));
  opacity: var(--divider-opacity, var(--opacity-icon-disabled, 0.5));
  pointer-events: none;
}

/* Horizontal Dividers */
span.divider.horizontal {
  width: 100%;
  left: 0;
  height: var(--divider-size, 1px);
}

/* Vertical Dividers */
span.divider.vertical {
  width: var(--divider-size, 1px);
  top: 0;
  height: 100%;
}

/* Icon-Button */
button.icon-button {
  display: block;
  position: relative;
  width: var(--icon-button-size, 40px);
  height: var(--icon-button-size, 40px);
  background: none;
  border: 0;
  box-sizing: border-box;
  padding: var(--icon-button-padding, 8px);
  color: var(--icon-button-color, var(--on-background-color));
  fill: var(--icon-button-color, var(--on-background-color));
  opacity: var(--icon-button-opacity, var(--opacity-md-icon-inactive));
  cursor: pointer;
}

/* Hover over Icon-Button */
button.icon-button:hover {
  opacity: var(--icon-button-hover-opacity, var(--opacity-md-active));
}

/* Icon in Icon-Button */
button.icon-button .icon {
  width: 100%;
  height: 100%;

  /* for `.material-icons` */
  /* Calulate the font-size relative to the size of icon-button */
  font-size: calc(var(--icon-button-size, 40px) - (var(--icon-button-padding, 8px) * 2));
  color: inherit !important;
  fill: inherit !important;
  pointer-events: none;
}

/* ------ */


/* Content */
#content {
  display: block;
  position: relative;
  box-sizing: border-box;
  flex: 1;
  overflow: scroll;
  scroll-behavior: smooth;
}



/* ===<<< Form ..+.. Input Default Styles >>>=== */

/* Form Styles */
form {
  --icon-button-size: 30px;
  --icon-button-padding: 4px;

  width: 100%;
  height: auto;
  padding: 8px 16px;
  box-sizing: border-box;
  max-width: var(--form-max-width, 450px);
  margin: 24px auto;
}



/* all labels next to an input */
label {
  pointer-events: none;
  user-select: none;
  position: absolute;
  left: 0;
  top: 0;

  -webkit-transform: translateY(0px);
  -moz-transform: translateY(0px);
  transform: translateY(0px);

  -webkit-transition: all .2s ease;
  -moz-transition: all .2s ease;
  transition: all .2s ease;
}


/* Labels with [raised] attribute / property */
label[raised] {
  transform: translateY(-18px);
  font-size: 12px;
  line-height: 20px;
  letter-spacing: 1.2px;
}

/* Input Wrapper */
.input-wrapper {
  position: relative;
  margin: 12px 0 24px;
  overflow: visible;
}


/* Input Styles */
input {
  background: inherit;
  color: inherit;
  border: 0;
  outline: 0;
  flex: 1;
  margin-bottom: 8px;
}

/* Password Input */
input[type="password"] {}

/* Submit Button / Inputs */
input[type="submit"] {
  border: 2px solid var(--outline-color);
  border-radius: 8px;
  padding: 8px 16px;
  opacity: var(--opacity-text-inactive);
  cursor: pointer;
  margin-top: 24px;
  margin-bottom: 16px;

  -webkit-transition: all .2s ease;
  -moz-transition: all .2s ease;
  transition: all .2s ease;
}

/* Hovered / Focused Submit Input */
input[type="submit"]:hover, input[type="submit"]:focus {
  opacity: 1; 
}

/* [contained] submit input or buttons */
button[contained], input[type="submit"][contained] {
  background: var(--primary-color);
  color: var(--on-primary-color);
  border: 0;
}

/* Iput Indicator */
.input-indicator {
  height: 2px;
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  pointer-events: none;
  /* margin: 8px 0; */
}

/* Bar of Input Indicator*/
.input-indicator span[bar] {
  width: inherit;
  height: inherit;
  background: var(--outline-color);
  display: block;
  opacity: var(--opacity-md-icon-inactive);
}

/* Value of Input Indicator */
.input-indicator span[val] {
  position: absolute;
  top: 0;
  margin: 0 auto;
  height: inherit;
  width: 0%;
  background: var(--indicator-color, var(--on-background-color));
  opacity: 0;

  -webkit-transition: width .2s ease, opacity .3s ease ;
  -moz-transition: width .2s ease, opacity .3s ease;
  transition: width .2s ease, opacity .3s ease;
}


/* Set the width of the indicator value (i.e. span[val]) to 100%, 
 * whenever an input inside a form gains focus */
input:focus ~ .input-indicator > span[val] {
  width: 100%;
  opacity: 1;
}


/* ===>>> End of Form ..+.. Input Default Styles  <<<=== */



/* Backdrop */
#backdrop {}

/* Dialogs Container */
#dialogsContainer {}

/* Toast */
#toast {}


/* Icon Wrapper  & Nav Links  */
a.icon-wrapper, a.nav-link {
  display: flex;
  position: relative;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
  text-decoration: none;
}

/* Nav Links */
a.nav-link {
  width: var(--nav-link-width, 100%);
  height: var(--nav-link-height, 60px);
  margin: var(--nav-link-margin, 8px 0);
  opacity: var(--nav-link-opacity, var(--opacity-icon-inactive));

  color: var(--nav-icon-color, var(--on-background-color));
  fill: var(--nav-icon-color, var(--on-background-color));
  cursor: pointer;
}

a.nav-link:hover, a.nav-link:focus {
 opacity: var(--nav-icon-opacity, 1);
}

/* Nav Icons */
span.nav-icon {
 font-size: var(--nav-icon-size, 24px);
 color: inherit;
 fill: inherit;
}





/* 
 * --> Wide - Layout <--
 * Phone: ? (Responsive)
 * Dimension: 460px+ (width)
 *
 * ***************************************
 * when the viewport is bigger than 460px,
 * layout changes to wide-layout.
 * ***************************************
 */
@media (min-width: 460px) {
  
  /* Vertical Nav Bar */
  .nav-bar.vertical {
    display: flex;
    width: var(--nav-bar-size, 78px); /* b4: 68px */
  }
  
  /* Horizontal Nav Bar & Footer of Main */
  .nav-bar.horizontal, main > footer {
    display: none !important;
    height: var(--nav-bar-size, 68px);
  }

  /* all App Bars in App Header */
  #appHeader > .app-bar {
    height: var(--app-bar-size, 60px);
  }

  /* ASIDE part of App Layout */
  #appLayout > aside {
    display: flex;
  }

  /* Icon-Button */
  button.icon-button {
    width: var(--icon-button-size, 48px);
    height: var(--icon-button-size, 48px); 
  }

  /* Icon in Icon-Button */
  button.icon-button .icon {
    font-size: calc(var(--icon-button-size, 48px) - (var(--icon-button-padding, 8px) * 2)); 
  }

  /* Icon Wrapper Links */
  a.icon-wrapper {
    height: var(--app-bar-size, 60px);
  }

  input[type="submit"] {
    margin-top: 32px;
    margin-bottom: 24px;
  }

}



/* 
 * --> Tablet - Device <--
 * Phone: ? (Responsive)
 * Width: 768px <-to-> 1024px
 */
@media (min-width: 768px) and (max-width: 1024px) {}


/* 
 * --> Laptop - Device <--
 * Phone: ? (Responsive)
 * Width: 1024px <-to-> 2560px
 */
@media (min-width: 1024px) and (max-width: 2560px) {

  /* ASIDE part of App Layout */
  #appLayout > aside {
    width: 60%;
  }
}


/* ==== END of THEME STYLES ==== */
